<launch>
	<!-- vim: set ft=xml noet : -->
	<!-- example launch script for PX4 based FCU's -->

	<arg name="fcu_url" default="/dev/Pixhawk:921600" />
	<arg name="gcs_url" default="" />
	<arg name="tgt_system" default="1" />
	<arg name="tgt_component" default="1" />
	<!-- arg name="log_output" default="screen" / -->

	<include file="$(find mavros)/launch/node.launch">
		<arg name="pluginlists_yaml" value="$(find mavros)/launch/px4_pluginlists.yaml" />
		<arg name="config_yaml" value="$(find mavros)/launch/px4_config.yaml" />

		<arg name="fcu_url" value="$(arg fcu_url)" />
		<arg name="gcs_url" value="$(arg gcs_url)" />
		<arg name="tgt_system" value="$(arg tgt_system)" />
		<arg name="tgt_component" value="$(arg tgt_component)" />
		<!-- arg name="log_output" value="$(arg log_output)" / -->
	</include>


  	<node pkg="de_lidar" name="tf20_node" type="tf20_node" output="screen">
    	<param name="device" type="string" value="/dev/Lidar"/>
    	<param name="frequency" type="int" value="50"/>
 	</node> 


        <node pkg="urg_node" name="urg" type="urg_node">
		    <param name="calibrate_time" type="bool" value="false"/>
		    <param name="ip_address" value="192.168.0.10"/>
		    <param name="intensity" type="bool" value="true"/>
		    <param name="min_ang" type="double" value="-2.2689" />
		    <param name="max_ang" type="double" value="2.2689" />
		    <remap from="scan" to="scan_horizontal"/>
		</node> 
        

	 <node name="find_obstacle"          pkg="rplidar_ros"  type="find_min_distance"/>

        <node name="receive_setpoints" pkg="offboard_set" type="receive_setpoints" output="screen">
        </node>
        <node name="process_setpoints" pkg="offboard_set" type="process_setpoints" output="screen">
        </node>
        <node name="publish_setpoints" pkg="offboard_set" type="publish_setpoints" output="screen">
        </node>
        <node name="flowmeter" pkg="flowmeter" type="flowmeter">
        </node>
        <node name="record" pkg="rosbag" type="record" args="record -O /home/ubuntu/rec.bag /mavros/state /offboard/setpoints_raw /offboard/setpoints_local /crop_dist /laser_send /offboard/record">
        </node>
</launch>
